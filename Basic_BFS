class Graph{
  private int V;
  private int E;
  private LinkedList<Integer>[]adj;
  
  Graph(int v){
    this.V= v;
    adj = new LinkedList[V];
    
    for(int i = 0; i<V; i++){
      adj[i] = new LinkedList();
    }
  }
  void addedge(int v, int w){
    adj[v] = w;
    adj[w] = v;
  }
}

void BFS(int s){
  boolean [] visited = new boolean [V];
  LinkedList<Integer> queue = new LinkedList();
  
  queue.add(s);
  visited[s] = true;
  
  while(queue.size() >0 ){
    int n = queue.poll();
    for (int k : adj[n]){                         // or Iterator <Integer> i =ad[n].listIterator();
                                                 // while (i.hasNext())  
      while(!visited[k])){                         // int n = i.next();
          visited[k] = true;
          queue.add(k);     
      }
    }
  }
}  
